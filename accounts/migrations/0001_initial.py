# Generated by Django 3.2 on 2025-07-03 09:30

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(max_length=50, unique=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('is_superuser', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GameParticipation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('selected_number', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)])),
                ('is_winner', models.BooleanField(default=False)),
                ('joined_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'game_participations',
            },
        ),
        migrations.CreateModel(
            name='GameSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('start_time', models.DateTimeField(auto_now_add=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('winning_number', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)])),
                ('is_active', models.BooleanField(default=True)),
                ('player_count', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'game_sessions',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='UserGameStats',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('wins', models.IntegerField(default=0)),
                ('games_played', models.IntegerField(default=0)),
                ('current_streak', models.IntegerField(default=0)),
                ('best_streak', models.IntegerField(default=0)),
                ('last_played', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='game_stats', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'user_game_stats',
            },
        ),
        migrations.AddIndex(
            model_name='gamesession',
            index=models.Index(fields=['is_active'], name='game_sessio_is_acti_6c3f78_idx'),
        ),
        migrations.AddIndex(
            model_name='gamesession',
            index=models.Index(fields=['created_at'], name='game_sessio_created_7179a2_idx'),
        ),
        migrations.AddIndex(
            model_name='gamesession',
            index=models.Index(fields=['session_id'], name='game_sessio_session_651356_idx'),
        ),
        migrations.AddField(
            model_name='gameparticipation',
            name='session',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='participations', to='accounts.gamesession'),
        ),
        migrations.AddField(
            model_name='gameparticipation',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='game_participations', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
        migrations.AddIndex(
            model_name='usergamestats',
            index=models.Index(fields=['wins'], name='user_game_s_wins_ff0ef2_idx'),
        ),
        migrations.AddIndex(
            model_name='usergamestats',
            index=models.Index(fields=['games_played'], name='user_game_s_games_p_f9dbff_idx'),
        ),
        migrations.AddIndex(
            model_name='usergamestats',
            index=models.Index(fields=['current_streak'], name='user_game_s_current_3f81a1_idx'),
        ),
        migrations.AddIndex(
            model_name='gameparticipation',
            index=models.Index(fields=['user', 'session'], name='game_partic_user_id_b69388_idx'),
        ),
        migrations.AddIndex(
            model_name='gameparticipation',
            index=models.Index(fields=['is_winner'], name='game_partic_is_winn_18663f_idx'),
        ),
        migrations.AddIndex(
            model_name='gameparticipation',
            index=models.Index(fields=['joined_at'], name='game_partic_joined__3fdd98_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='gameparticipation',
            unique_together={('user', 'session')},
        ),
    ]
